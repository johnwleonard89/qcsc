---
export interface Props {
  title: string;
  description: string;
  image: string;
  href?: string;
  features?: string[];
  featured?: boolean;
}

const { title, description, image, href = '/services', features = [], featured = false } = Astro.props;
---

<div class={`bg-white rounded-lg shadow-lg overflow-hidden transition-transform hover:scale-105 ${featured ? 'ring-2 ring-blue-500' : ''}`}>
  <div class="relative">
    <img src={image} alt={title} class="w-full h-48 object-cover" />
    {featured && (
      <div class="absolute top-4 right-4 bg-blue-600 text-white px-3 py-1 rounded-full text-sm font-semibold">
        Featured
      </div>
    )}
  </div>
  
  <div class="p-6">
    <h3 class="text-xl font-bold text-gray-900 mb-3">{title}</h3>
    <p class="text-gray-600 mb-4">{description}</p>
    
    {features.length > 0 && (
      <ul class="space-y-1 mb-4">
        {features.map((feature) => (
          <li class="flex items-center text-sm text-gray-600">
            <svg class="w-4 h-4 text-green-500 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
            </svg>
            {feature}
          </li>
        ))}
      </ul>
    )}
    
    <a 
      href={href} 
      class="inline-block bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition-colors font-medium"
    >
      Learn More
    </a>
  </div>
</div>