---
import { Container, Button } from '@components/odyssey-theme';
import Layout from '../layouts/Page.astro';

const seo = {
	title: 'Offline - Queen City Surface Coatings',
	description: 'You are currently offline. Please check your internet connection and try again.',
	keywords: 'offline, no connection, Queen City Surface Coatings',
	type: 'website'
};
---

<Layout {seo}>
	<Container>
		<section class="offline-section">
			<div class="offline-content">
				<div class="offline-icon">üì±</div>
				<h1>You're Offline</h1>
				<p class="offline-message">
					It looks like you're not connected to the internet. Some features may not be available right now.
				</p>
				
				<div class="offline-actions">
					<h3>What you can do:</h3>
					<ul class="offline-options">
						<li>‚úÖ Browse cached pages</li>
						<li>‚úÖ View our contact information</li>
						<li>‚úÖ Check your connection and try again</li>
					</ul>
				</div>
				
				<div class="contact-info-offline">
					<h3>Get in touch when you're back online:</h3>
					<div class="contact-methods">
						<div class="contact-item">
							<strong>üìû Phone:</strong>
							<a href="tel:+15132965525">(513) 296-5525</a>
						</div>
						<div class="contact-item">
							<strong>üìß Email:</strong>
							<span>john@queencitysurfacecoatings.com</span>
						</div>
						<div class="contact-item">
							<strong>üè¢ Service Area:</strong>
							<span>Cincinnati Tri-State Area</span>
						</div>
					</div>
				</div>
				
				<div class="offline-buttons">
					<Button onclick="window.location.reload();">
						Try Again
					</Button>
					<Button href="/" class="btn-outline">
						Go Home
					</Button>
				</div>
			</div>
		</section>
	</Container>
</Layout>

<style>
	.offline-section {
		min-height: 70vh;
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 2rem 0;
	}
	
	.offline-content {
		text-align: center;
		max-width: 600px;
		padding: 2rem;
		background: var(--theme-surface-1);
		border-radius: 1rem;
		box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
	}
	
	.offline-icon {
		font-size: 4rem;
		margin-bottom: 1rem;
		opacity: 0.7;
	}
	
	.offline-content h1 {
		color: var(--theme-primary);
		margin-bottom: 1rem;
		font-size: 2.5rem;
	}
	
	.offline-message {
		font-size: 1.125rem;
		line-height: 1.6;
		margin-bottom: 2rem;
		opacity: 0.8;
	}
	
	.offline-actions {
		margin-bottom: 2rem;
	}
	
	.offline-actions h3 {
		color: var(--theme-primary);
		margin-bottom: 1rem;
		font-size: 1.25rem;
	}
	
	.offline-options {
		list-style: none;
		padding: 0;
		text-align: left;
		display: inline-block;
	}
	
	.offline-options li {
		padding: 0.5rem 0;
		font-weight: 500;
	}
	
	.contact-info-offline {
		background: var(--theme-bg);
		padding: 1.5rem;
		border-radius: 0.5rem;
		margin-bottom: 2rem;
		text-align: left;
	}
	
	.contact-info-offline h3 {
		color: var(--theme-primary);
		margin-bottom: 1rem;
		text-align: center;
	}
	
	.contact-methods {
		display: grid;
		gap: 1rem;
	}
	
	.contact-item {
		display: flex;
		flex-direction: column;
		gap: 0.25rem;
	}
	
	.contact-item strong {
		color: var(--theme-primary);
		font-weight: 600;
	}
	
	.contact-item a {
		color: var(--theme-primary);
		text-decoration: none;
		font-weight: 600;
	}
	
	.contact-item a:hover {
		text-decoration: underline;
	}
	
	.offline-buttons {
		display: flex;
		gap: 1rem;
		justify-content: center;
		flex-wrap: wrap;
	}
	
	@media (max-width: 768px) {
		.offline-content {
			padding: 1.5rem;
			margin: 0 1rem;
		}
		
		.offline-content h1 {
			font-size: 2rem;
		}
		
		.offline-icon {
			font-size: 3rem;
		}
		
		.offline-buttons {
			flex-direction: column;
			align-items: center;
		}
		
		.contact-methods {
			gap: 0.75rem;
		}
	}
	
	/* Animation for better UX */
	.offline-content {
		animation: fadeInUp 0.5s ease;
	}
	
	@keyframes fadeInUp {
		from {
			opacity: 0;
			transform: translateY(20px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}
	
	/* Reduce motion for accessibility */
	@media (prefers-reduced-motion: reduce) {
		.offline-content {
			animation: none;
		}
	}
</style>

<script>
	// Check if we're back online and reload if so
	window.addEventListener('online', () => {
		setTimeout(() => {
			window.location.reload();
		}, 1000);
	});
	
	// Update UI based on connection status
	function updateConnectionStatus() {
		const isOnline = navigator.onLine;
		if (isOnline) {
			document.body.style.borderTop = '4px solid #10b981';
		} else {
			document.body.style.borderTop = '4px solid #ef4444';
		}
	}
	
	window.addEventListener('online', updateConnectionStatus);
	window.addEventListener('offline', updateConnectionStatus);
	updateConnectionStatus();
</script>