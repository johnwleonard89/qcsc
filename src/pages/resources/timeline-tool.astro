---
import { Container, TextSection } from '@components/odyssey-theme';
import Layout from '../../layouts/Page.astro';

const seo = {
	title: 'Project Timeline Tool | Queen City Surface Coatings',
	description: 'Plan your concrete coating project timeline. Understand each phase from preparation to completion.',
	keywords: 'concrete coating timeline, epoxy flooring schedule, project planning, surface coating phases',
	type: 'website',
	breadcrumbs: [
		{ name: 'Home', url: 'https://queencitysurfacecoatings.com/' },
		{ name: 'Resources', url: 'https://queencitysurfacecoatings.com/resources/' },
		{ name: 'Timeline Tool', url: 'https://queencitysurfacecoatings.com/resources/timeline-tool/' }
	]
};
---

<Layout seo={seo}>
	<Container>
		<TextSection>
			<h1>Project Timeline Planning Tool</h1>
			<p>Plan your surface coating project timeline and understand what to expect during each phase of the process.</p>
		</TextSection>

		<section class="timeline-tool-section">
			<div class="timeline-form">
				<h3>Project Details</h3>
				<form id="timelineForm">
					<div class="form-group">
						<label for="projectSize">Project Size:</label>
						<select id="projectSize" onchange="updateTimeline()">
							<option value="">Select Project Size</option>
							<option value="small">Small (Under 500 sq ft)</option>
							<option value="medium">Medium (500-1,500 sq ft)</option>
							<option value="large">Large (1,500-3,000 sq ft)</option>
							<option value="xlarge">Extra Large (Over 3,000 sq ft)</option>
						</select>
					</div>

					<div class="form-group">
						<label for="coatingType">Coating Type:</label>
						<select id="coatingType" onchange="updateTimeline()">
							<option value="">Select Coating Type</option>
							<option value="standard">Standard Epoxy</option>
							<option value="metallic">Metallic Epoxy</option>
							<option value="polyaspartic">Polyaspartic</option>
							<option value="polyurea">Polyurea</option>
						</select>
					</div>

					<div class="form-group">
						<label for="surfaceCondition">Surface Condition:</label>
						<select id="surfaceCondition" onchange="updateTimeline()">
							<option value="">Select Condition</option>
							<option value="excellent">Excellent (minimal prep)</option>
							<option value="good">Good (standard prep)</option>
							<option value="fair">Fair (moderate repair)</option>
							<option value="poor">Poor (extensive prep)</option>
						</select>
					</div>

					<div class="form-group">
						<label for="startDate">Preferred Start Date:</label>
						<input type="date" id="startDate" onchange="updateTimeline()">
					</div>
				</form>
			</div>

			<div id="timelineResults" class="timeline-results" style="display: none;">
				<h3>Your Project Timeline</h3>
				<div id="timelinePhases" class="timeline-phases">
					<!-- Timeline phases will be populated by JavaScript -->
				</div>
				<div class="timeline-summary">
					<p><strong>Total Project Duration: <span id="totalDuration"></span></strong></p>
					<p><strong>Estimated Completion: <span id="completionDate"></span></strong></p>
				</div>
				<div class="timeline-note">
					<p><em>Note: Weather conditions, surface complications, and seasonal factors may affect the actual timeline. We'll provide a detailed schedule during your consultation.</em></p>
				</div>
				<a href="/company/contact/" class="btn btn-primary">Schedule Consultation</a>
			</div>
		</section>
	</Container>
</Layout>

<script>
function updateTimeline() {
	const projectSize = document.getElementById('projectSize').value;
	const coatingType = document.getElementById('coatingType').value;
	const surfaceCondition = document.getElementById('surfaceCondition').value;
	const startDate = document.getElementById('startDate').value;

	if (!projectSize || !coatingType || !surfaceCondition || !startDate) {
		document.getElementById('timelineResults').style.display = 'none';
		return;
	}

	// Calculate timeline phases
	const timeline = calculateProjectTimeline(projectSize, coatingType, surfaceCondition);
	const phases = generateTimelinePhases(timeline, new Date(startDate));

	// Display results
	displayTimeline(phases, timeline.totalDays);
	document.getElementById('timelineResults').style.display = 'block';
}

function calculateProjectTimeline(size, coating, condition) {
	let prepDays = 1;
	let applicationDays = 1;
	let curingDays = 2;

	// Adjust for project size
	if (size === 'medium') {
		prepDays += 1;
		applicationDays += 1;
	} else if (size === 'large') {
		prepDays += 2;
		applicationDays += 2;
	} else if (size === 'xlarge') {
		prepDays += 3;
		applicationDays += 3;
	}

	// Adjust for surface condition
	if (condition === 'fair') {
		prepDays += 1;
	} else if (condition === 'poor') {
		prepDays += 2;
	}

	// Adjust for coating type
	if (coating === 'metallic') {
		applicationDays += 1;
		curingDays += 1;
	} else if (coating === 'polyaspartic') {
		curingDays = 1; // Faster curing
	} else if (coating === 'polyurea') {
		curingDays = 1;
	}

	return {
		prepDays,
		applicationDays,
		curingDays,
		totalDays: prepDays + applicationDays + curingDays
	};
}

function generateTimelinePhases(timeline, startDate) {
	const phases = [];
	let currentDate = new Date(startDate);

	// Phase 1: Surface Preparation
	phases.push({
		name: 'Surface Preparation',
		description: 'Cleaning, repairs, and surface profiling',
		startDate: new Date(currentDate),
		duration: timeline.prepDays,
		color: '#FF6B6B'
	});
	currentDate.setDate(currentDate.getDate() + timeline.prepDays);

	// Phase 2: Coating Application
	phases.push({
		name: 'Coating Application',
		description: 'Primer and coating system installation',
		startDate: new Date(currentDate),
		duration: timeline.applicationDays,
		color: '#4ECDC4'
	});
	currentDate.setDate(currentDate.getDate() + timeline.applicationDays);

	// Phase 3: Curing & Inspection
	phases.push({
		name: 'Curing & Final Inspection',
		description: 'Curing time and quality inspection',
		startDate: new Date(currentDate),
		duration: timeline.curingDays,
		color: '#45B7D1'
	});

	return phases;
}

function displayTimeline(phases, totalDays) {
	const phasesContainer = document.getElementById('timelinePhases');
	const completionDate = new Date(phases[phases.length - 1].startDate);
	completionDate.setDate(completionDate.getDate() + phases[phases.length - 1].duration);

	phasesContainer.innerHTML = phases.map(phase => {
		const endDate = new Date(phase.startDate);
		endDate.setDate(endDate.getDate() + phase.duration);
		
		return `
			<div class="timeline-phase" style="border-left: 4px solid ${phase.color}">
				<div class="phase-header">
					<h4>${phase.name}</h4>
					<span class="phase-duration">${phase.duration} day${phase.duration > 1 ? 's' : ''}</span>
				</div>
				<p class="phase-description">${phase.description}</p>
				<p class="phase-dates">
					${phase.startDate.toLocaleDateString()} - ${endDate.toLocaleDateString()}
				</p>
			</div>
		`;
	}).join('');

	document.getElementById('totalDuration').textContent = `${totalDays} days`;
	document.getElementById('completionDate').textContent = completionDate.toLocaleDateString();
}
</script>

<style>
.timeline-tool-section {
	max-width: 1000px;
	margin: 2rem auto;
	display: grid;
	grid-template-columns: 1fr 1fr;
	gap: 2rem;
}

.timeline-form {
	padding: 2rem;
	background: var(--theme-surface-1);
	border-radius: var(--theme-shape-radius);
	height: fit-content;
}

.form-group {
	margin-bottom: 1.5rem;
}

.form-group label {
	display: block;
	margin-bottom: 0.5rem;
	font-weight: 600;
	color: var(--theme-surface-2);
}

.form-group input,
.form-group select {
	width: 100%;
	padding: 0.75rem;
	border: 2px solid var(--theme-border-light);
	border-radius: 0.375rem;
	font-size: 1rem;
	background: var(--theme-bg);
}

.timeline-results {
	padding: 2rem;
	background: var(--theme-bg);
	border-radius: var(--theme-shape-radius);
	border: 2px solid var(--theme-primary);
}

.timeline-phases {
	margin: 1.5rem 0;
}

.timeline-phase {
	padding: 1rem;
	margin-bottom: 1rem;
	background: var(--theme-surface-1);
	border-radius: 0.375rem;
	padding-left: 1.5rem;
}

.phase-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	margin-bottom: 0.5rem;
}

.phase-header h4 {
	margin: 0;
	color: var(--theme-surface-2);
}

.phase-duration {
	background: var(--theme-primary);
	color: var(--theme-on-primary);
	padding: 0.25rem 0.75rem;
	border-radius: 1rem;
	font-size: 0.875rem;
	font-weight: 600;
}

.phase-description {
	margin: 0.5rem 0;
	color: var(--theme-on-surface-1);
}

.phase-dates {
	margin: 0;
	font-size: 0.875rem;
	color: var(--theme-on-surface-1);
	font-weight: 600;
}

.timeline-summary {
	background: var(--theme-surface-1);
	padding: 1rem;
	border-radius: 0.375rem;
	margin: 1rem 0;
}

.timeline-note {
	font-size: 0.9rem;
	color: var(--theme-on-surface-1);
	margin: 1rem 0;
}

.btn {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	padding: 0.75rem 1.5rem;
	background: var(--theme-primary);
	color: var(--theme-on-primary);
	border: none;
	border-radius: var(--theme-button-border-radius);
	font-weight: 600;
	text-decoration: none;
	transition: var(--theme-transition);
	margin-top: 1rem;
}

.btn:hover {
	transform: translateY(-1px);
}

@media (max-width: 768px) {
	.timeline-tool-section {
		grid-template-columns: 1fr;
	}
}
</style>